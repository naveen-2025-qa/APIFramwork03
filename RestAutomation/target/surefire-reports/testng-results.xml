<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-16T20:58:47 IST" name="Surefire suite" finished-at="2025-06-16T20:59:08 IST" duration-ms="20867">
    <groups>
    </groups>
    <test started-at="2025-06-16T20:58:47 IST" name="Surefire test" finished-at="2025-06-16T20:59:08 IST" duration-ms="20867">
      <class name="api.test.ProductAPITests">
        <test-method signature="testCreateProduct_Positive(api.payload.Product)[pri:1, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:58:54 IST" name="testCreateProduct_Positive" description="Create product with valid data" data-provider="dbProducts" finished-at="2025-06-16T20:58:58 IST" duration-ms="4452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@3c3a0032]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProduct_Positive -->
        <test-method signature="testCreateProduct_Positive(api.payload.Product)[pri:1, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:58:58 IST" name="testCreateProduct_Positive" description="Create product with valid data" data-provider="dbProducts" finished-at="2025-06-16T20:58:59 IST" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@65cc5252]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProduct_Positive -->
        <test-method signature="testCreateProduct_Negative(api.payload.Product)[pri:2, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:58:59 IST" name="testCreateProduct_Negative" description="Attempt to create product with invalid data" data-provider="invalidProductData" finished-at="2025-06-16T20:59:00 IST" duration-ms="1110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@3bbf1c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProduct_Negative -->
        <test-method signature="testCreateProduct_Negative(api.payload.Product)[pri:2, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:00 IST" name="testCreateProduct_Negative" description="Attempt to create product with invalid data" data-provider="invalidProductData" finished-at="2025-06-16T20:59:01 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@1ee40b5c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProduct_Negative -->
        <test-method signature="testGetProduct_Positive()[pri:3, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:01 IST" name="testGetProduct_Positive" description="Get existing product" finished-at="2025-06-16T20:59:02 IST" depends-on-methods="api.test.ProductAPITests.testCreateProduct_Positive" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProduct_Positive -->
        <test-method signature="testGetProduct_Negative()[pri:4, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:02 IST" name="testGetProduct_Negative" description="Get non-existent product" finished-at="2025-06-16T20:59:03 IST" duration-ms="1468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProduct_Negative -->
        <test-method signature="testUpdateProduct_Positive()[pri:5, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:03 IST" name="testUpdateProduct_Positive" description="Update product with valid data" finished-at="2025-06-16T20:59:04 IST" depends-on-methods="api.test.ProductAPITests.testCreateProduct_Positive" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct_Positive -->
        <test-method signature="testUpdateProduct_Negative(api.payload.Product)[pri:6, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:04 IST" name="testUpdateProduct_Negative" description="Attempt to update with invalid data" data-provider="invalidProductData" finished-at="2025-06-16T20:59:05 IST" depends-on-methods="api.test.ProductAPITests.testCreateProduct_Positive" duration-ms="782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@7de147e9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct_Negative -->
        <test-method signature="testUpdateProduct_Negative(api.payload.Product)[pri:6, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:05 IST" name="testUpdateProduct_Negative" description="Attempt to update with invalid data" data-provider="invalidProductData" finished-at="2025-06-16T20:59:06 IST" depends-on-methods="api.test.ProductAPITests.testCreateProduct_Positive" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[api.payload.Product@5f6494c0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct_Negative -->
        <test-method signature="testDeleteProduct_Positive()[pri:7, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:06 IST" name="testDeleteProduct_Positive" description="Delete existing product" finished-at="2025-06-16T20:59:08 IST" depends-on-methods="api.test.ProductAPITests.testCreateProduct_Positive" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct_Positive -->
        <test-method signature="testDeleteProduct_Negative()[pri:8, instance:api.test.ProductAPITests@55b7a4e0]" started-at="2025-06-16T20:59:08 IST" name="testDeleteProduct_Negative" description="Delete already deleted product" finished-at="2025-06-16T20:59:08 IST" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct_Negative -->
      </class> <!-- api.test.ProductAPITests -->
      <class name="api.test.HeaderValidationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.test.HeaderValidationTest@20deea7f]" started-at="2025-06-16T20:58:48 IST" name="setup" finished-at="2025-06-16T20:58:48 IST" duration-ms="940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="validateAuthorizationHeader()[pri:0, instance:api.test.HeaderValidationTest@20deea7f]" started-at="2025-06-16T20:58:48 IST" name="validateAuthorizationHeader" finished-at="2025-06-16T20:58:52 IST" duration-ms="3848" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at api.test.HeaderValidationTest.validateAuthorizationHeader(HeaderValidationTest.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAuthorizationHeader -->
        <test-method signature="validateResponseHeaders()[pri:0, instance:api.test.HeaderValidationTest@20deea7f]" started-at="2025-06-16T20:58:52 IST" name="validateResponseHeaders" finished-at="2025-06-16T20:58:54 IST" duration-ms="1263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseHeaders -->
      </class> <!-- api.test.HeaderValidationTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
